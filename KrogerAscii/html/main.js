// Generated by CoffeeScript 1.7.1
(function() {
    var Saver;

    Saver = (function() {
        function Saver() {}

        Saver.prototype.itemSize = 48;

        Saver.prototype.boxes = [];

        Saver.prototype.icons = [];

        Saver.prototype.start = function() {
            this.container = document.querySelector('#screen');
            this.logoIcon = false;
            this.setIcons();
            this.setSize();
            this.drawBoxes();
            return setInterval(this.flashIcon, 100);
        };

        Saver.prototype.setIcons = function() {
            $.ajaxSetup({ async: false });
            var _icons = new Array;
            var jqxhr = $.getJSON('selection.json', function(json){
                for(var i = 0; i < json.icons.length; i++) {
                    var obj = json.icons[i];
                    _icons.push(obj.properties.name);
                }
            });
            this.icons = _icons;
            if( $.inArray('logo-icomoon', this.icons) != -1) {
                this.logoIcon = true;
                this.icons.splice(this.icons.indexOf('logo-icomoon'), 1);
            }
        }

        Saver.prototype.setSize = function() {
            var left, top;
            this.screenWidth = window.outerWidth;
            this.screenHeight = window.outerHeight;
            this.cols = Math.ceil(this.screenWidth / this.itemSize);
            if (this.cols % 2 === 1) {
                this.cols += 1;
            }
            this.rows = Math.ceil(this.screenHeight / this.itemSize);
            if (this.rows % 2 === 0) {
                this.rows += 1;
            }
            this.width = this.cols * this.itemSize;
            this.height = this.rows * this.itemSize;
            left = -(this.width - this.screenWidth) / 2;
            top = -(this.height - this.screenHeight) / 2;
            this.container.style.width = this.width;
            this.container.style.height = this.height;
            this.container.style.top = top;
            return this.container.style.left = left;
        };

        Saver.prototype.drawBoxes = function() {
            var box, col, row, _i, _ref, _results;
            _results = [];
            for (row = _i = 1, _ref = this.rows; 1 <= _ref ? _i <= _ref : _i >= _ref; row = 1 <= _ref ? ++_i : --_i) {
                _results.push((function() {
                    var _j, _ref1, _results1;
                    _results1 = [];
                    for (col = _j = 1, _ref1 = this.cols; 1 <= _ref1 ? _j <= _ref1 : _j >= _ref1; col = 1 <= _ref1 ? ++_j : --_j) {
                        box = document.createElement('div');
                        box.classList.add('octicon-mega');
                        if (this.logoIcon && row === Math.ceil(this.rows / 2) && (col === this.cols / 2 || col === (this.cols / 2) + 1)) {
                            if (col !== (this.cols / 2) + 1) {
                                box.classList.add('logo');
                                box.classList.add('icon-logo-icomoon');
                            }
                        } else {
                            box.classList.add('icon');
                            box.classList.add('icon-' + this.icons[Math.floor(Math.random() * this.icons.length)]);
                        }
                        _results1.push(this.container.appendChild(box));
                    }
                    return _results1;
                }).call(this));
            }
            return _results;
        };

        Saver.prototype.flashIcon = function() {
            var box, boxes, clear;
            boxes = document.querySelectorAll('.icon:not(.fading)');
            box = boxes[Math.floor(Math.random() * boxes.length)];
            box.classList.add('fading');
            clear = function() {
                return box.classList.remove('fading');
            };
            return setTimeout(clear, 8000);
        };

        return Saver;

    })();

    new Saver().start();

}).call(this);
